version: '3'

services:

  # quick helper for previewing jupyter notebooks inside the console
  w3m: &w3m
    volumes:
      - .:/workspace
    working_dir: /workspace
    tty: true
    stdin_open: true
    build:
     context: .
     dockerfile_inline: |
        FROM alpine:latest
        RUN echo http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories
        RUN apk add --allow-untrusted --no-cache w3m
        ENTRYPOINT ["/usr/bin/w3m"]

  storm: &storm
    image: fmtk:stormbase
    build:
      context: .
    volumes:
      - .:/workspace
      - ./jupyter:/root/.jupyter
      - ./jupyter/overrides.json:/opt/venv/share/jupyter/lab/settings/overrides.json
      - ./jupyter/jupyter_app_launcher:/opt/venv/share/jupyter/jupyter_app_launcher
      # - ./jupyter/overrides.json:/root/.jupyter/overrides.json
    working_dir: /workspace
    # command: ["storm", "model-check", "models/markov-chain.pm"]
    entrypoint: storm

  shell: &shell
    <<: *storm
    entrypoint: bash
    stdin_open: true
    tty: true

  stormpy: &stormpy
    <<: *shell
    image: fmtk:stormpy
    # command: >-
    #   -x -c "ipython -i -c 'import stormpy; print(stormpy.__version__)'"

  momba: &momba
    <<: *stormpy
    depends_on: ['stormpy']
    image: fmtk:momba
    build:
      context: .
      dockerfile_inline: |
        FROM fmtk:stormpy
        RUN pip install momba[all]
        RUN pip install racetrack

  lab:
    <<: *momba
    depends_on: ['momba']
    image: fmtk:lab
    entrypoint: >
      jupyter lab --ip=0.0.0.0
        --port=9999 --no-browser
        --ServerApp.token= --ServerApp.password=
        --allow-root
    ports: ['9999:9999']
